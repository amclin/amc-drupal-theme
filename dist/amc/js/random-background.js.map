{"version":3,"sources":["js/random-background.js"],"names":["jQuery","document","ready","$","getAPI","api","block","length","data","setBackground","url","css","getRandomImage","images","Math","floor","random","photo","field_photo","src","imageList","get","done","result","img","photos","fail","err","console","error"],"mappings":";;AAAA;;AAEA;AACA;AACA;AACA;AACAA,MAAM,CAACC,QAAD,CAAN,CAAiBC,KAAjB,CAAuB,UAAUC,CAAV,EAAa;AAClC;AACF;AACA;AACE,MAAMC,MAAM,GAAG,SAATA,MAAS,GAAY;AACzB,QAAIC,GAAJ;AACA,QAAMC,KAAK,GAAGH,CAAC,CAAC,iCAAD,CAAf;;AACA,QAAIG,KAAK,CAACC,MAAN,KAAiB,CAArB,EAAwB;AACtBF,MAAAA,GAAG,GAAGC,KAAK,CAACE,IAAN,GAAaH,GAAnB;AACD;;AACD,WAAOA,GAAP;AACD,GAPD;AASA;AACF;AACA;AACA;;;AACE,MAAMI,aAAa,GAAG,SAAhBA,aAAgB,CAAUC,GAAV,EAAe;AACnCP,IAAAA,CAAC,CAAC,oBAAD,CAAD,CAAwBQ,GAAxB,CAA4B;AAC1B,wCAA2BD,GAA3B;AAD0B,KAA5B;AAGD,GAJD;AAMA;AACF;AACA;AACA;AACA;;;AACE,MAAME,cAAc,GAAG,SAAjBA,cAAiB,CAAUC,MAAV,EAAkB;AACvC,QAAIH,GAAJ;;AACA,QAAIG,MAAM,CAACN,MAAP,GAAgB,CAApB,EAAuB;AACrBG,MAAAA,GAAG,GAAGG,MAAM,CAACC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBH,MAAM,CAACN,MAAlC,CAAD,CAAN,CAAkDU,KAAlD,CAAwDC,WAAxD,CAAoEC,GAA1E;AACD;;AACD,WAAOT,GAAP;AACD,GAND;;AAQA,MAAML,GAAG,GAAGD,MAAM,EAAlB;;AAEA,MAAI,OAAOC,GAAP,KAAe,QAAnB,EAA6B;AAC3B,QAAIe,SAAS,GAAGjB,CAAC,CAACkB,GAAF,CAAM;AAAEX,MAAAA,GAAG,EAAEL;AAAP,KAAN,CAAhB;AAEAe,IAAAA,SAAS,CAACE,IAAV,CAAe,UAACC,MAAD,EAAY;AACzB,UAAIC,GAAG,GAAGZ,cAAc,CAACW,MAAM,CAACE,MAAR,CAAxB;AACAhB,MAAAA,aAAa,CAACe,GAAD,CAAb;AACD,KAHD,EAGGE,IAHH,CAGQ,UAACC,GAAD,EAAS;AACfC,MAAAA,OAAO,CAACC,KAAR,CAAc,0CAAd,EAA0DF,GAA1D;AACD,KALD;AAMD;AACF,CAhDD","sourcesContent":["/* eslint-env jquery */\n\n/**\n * Applies a random background image for the page from a source list\n * provided from a REST API.\n */\njQuery(document).ready(function ($) {\n  /**\n     * Gets the API from where it's defined in the page source\n     */\n  const getAPI = function () {\n    let api\n    const block = $('#block-views-random-photo-block')\n    if (block.length === 1) {\n      api = block.data().api\n    }\n    return api\n  }\n\n  /**\n     * Sets the background image of the page\n     * @param {Url} url to the image\n     */\n  const setBackground = function (url) {\n    $('.region-background').css({\n      'background-image': `url(${url})`\n    })\n  }\n\n  /**\n     * Extracts a single random image from a list of photo objects\n     * @param {list} images Array of photo objects\n     * @returns {string} URL of image\n     */\n  const getRandomImage = function (images) {\n    var url\n    if (images.length > 0) {\n      url = images[Math.floor(Math.random() * images.length)].photo.field_photo.src\n    }\n    return url\n  }\n\n  const api = getAPI()\n\n  if (typeof api === 'string') {\n    var imageList = $.get({ url: api })\n\n    imageList.done((result) => {\n      var img = getRandomImage(result.photos)\n      setBackground(img)\n    }).fail((err) => {\n      console.error('Failed to get list of background images.', err)\n    })\n  }\n})\n"],"file":"random-background.js"}